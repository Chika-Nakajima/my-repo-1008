name: Certificate Management

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  manage_certificates:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Find certificates
      id: find_certificates
      run: |
        find . -type f \( -name "*.pem" -o -name "*.crt" -o -name "*.cer" \) > certificates.txt || true
        cat certificates.txt # 内容を出力
        if [ -s certificates.txt ]; then
          certificates=$(tr '\n' ',' < certificates.txt | sed 's/,$//') # 最後のカンマを削除
          echo "certificates=$certificates" >> $GITHUB_ENV
        else
          echo "No certificates found."
          exit 1
        fi

    - name: Check certificates environment variable
      run: |
        echo "Certificates: ${{ env.certificates }}"

    - name: Update CSV
      run: |
        certificates="${{ env.certificates }}"
        csv_file="certificates.csv"
        timestamp=$(date +"%Y-%m-%d %H:%M:%S")
        owner="${{ github.actor }}"
        echo "File Path,File Name,Owner,Timestamp" > $csv_file # CSVヘッダーを追加
        IFS=',' read -ra cert_array <<< "$certificates"
        for cert in "${cert_array[@]}"; do
          echo "$cert,$(basename "$cert"),$owner,$timestamp" >> $csv_file
        done

    - name: Upload CSV as artifact
      uses: actions/upload-artifact@v3
      with:
        name: certificates
        path: certificates.csv

    - name: Get artifact download URL
      id: get_artifact
      run: |
        ARTIFACT_NAME="certificates"
        GITHUB_RUN_ID="${{ github.run_id }}"
        GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
        API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/$GITHUB_RUN_ID/artifacts"

        # アーティファクトのURLを取得
        artifact_url=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $API_URL | jq -r --arg ARTIFACT_NAME "$ARTIFACT_NAME" '.artifacts[] | select(.name == $ARTIFACT_NAME) | .archive_download_url')
        
        if [ -z "$artifact_url" ]; then
          echo "Artifact URL not found."
          exit 1
        fi

        echo "artifact_url=$artifact_url" >> $GITHUB_ENV

    - name: Notify Slack
      run: |
        artifact_url="${{ env.artifact_url }}"
        curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"新しい証明書が追加されました。必要事項を以下のリンクから記入してください。<${artifact_url}|ダウンロードリンク>\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
