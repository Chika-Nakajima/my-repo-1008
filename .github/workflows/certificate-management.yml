name: Certificate Management

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  manage_certificates:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Find new certificates
        id: find_new_certificates
        run: |
          # 変更されたファイルを取得
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          
          # 新たに追加された証明書を探す
          echo "$CHANGED_FILES" | grep -E '\.pem$|\.crt$|\.cer$' > new_certificates.txt || true
          
          if [ -s new_certificates.txt ]; then
            certificates=$(tr '\n' ',' < new_certificates.txt | sed 's/,$//') # 最後のカンマを削除
            echo "certificates=$certificates" >> $GITHUB_ENV
          else
            echo "No new certificates found."
            exit 0
          fi

      - name: Check certificates environment variable
        run: |
          echo "Certificates: ${{ env.certificates }}"

      - name: Update CSV
        run: |
          certificates="${{ env.certificates }}"
          csv_file="certificates.csv"
          timestamp=$(date +"%Y-%m-%d %H:%M:%S")
          owner="${{ github.actor }}"
          echo "File Path,File Name,Owner,Timestamp" > $csv_file # CSVヘッダーを追加
          IFS=',' read -ra cert_array <<< "$certificates"
          for cert in "${cert_array[@]}"; do
            echo "$cert,$(basename "$cert"),$owner,$timestamp" >> $csv_file
          done

      - name: Upload CSV as artifact
        uses: actions/upload-artifact@v3
        with:
          name: certificates
          path: certificates.csv

      - name: Notify Slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"新しい証明書が追加されました。必要事項を記入してください。"}' ${{ secrets.SLACK_WEBHOOK_URL }}
